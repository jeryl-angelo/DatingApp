@page "/users/create/"
@inject HttpClient _client
@inject NavigationManager _navManager

<h3 class="card-title">Create New User</h3>
<hr />
<br />

<EditForm Model="@user" OnValidSubmit="CreateUser">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Username: </label>
        <div>
            <InputText @bind-Value="@user.Username" class="form-control" />
            <ValidationMessage For="@(() => user.Username)" />
        </div>
    </div>

    <div class="form-group">
        <label>Email:</label>
        <div>
            <InputText @bind-Value="@user.Email" class="form-control" />
            <ValidationMessage For="@(() => user.Email)" />
        </div>
    </div>

    <div class="form-group">
        <label>Age:</label>
        <div>
            <InputNumber @bind-Value="@user.Age" class="form-control" />
            <ValidationMessage For="@(() => user.Age)" />
        </div>
    </div>

    <div class="form-group">
        <label>Pronouns: </label>
        <div>
            <InputText @bind-Value="@user.Pronouns" class="form-control" />
            <ValidationMessage For="@(() => user.Pronouns)" />
        </div>
    </div>

    <div class="form-group">
        <label>Gender: </label>
        <div>
            <InputText @bind-Value="@user.Gender" class="form-control" />
            <ValidationMessage For="@(() => user.Gender)" />
        </div>
    </div>

    <div class="form-group">
        <label>GenderPreference: </label>
        <div>
            <InputText @bind-Value="@user.GenderPreference" class="form-control" />
            <ValidationMessage For="@(() => user.GenderPreference)" />
        </div>
    </div>

    <div class="form-group">
        <label>AgePreference: </label>
        <div>
            <InputText @bind-Value="@user.AgePreference" class="form-control" />
            <ValidationMessage For="@(() => user.AgePreference)" />
        </div>
    </div>
    <div class="form-group">
        <label>Location: </label>
        <div>
            <InputText @bind-Value="@user.Location" class="form-control" />
            <ValidationMessage For="@(() => user.Location)" />
        </div>
    </div>

    <button type="submit" class="btn btn-success btn-block">
        Create User
    </button>
    <BackToList Target="matches" />
</EditForm>

@code { User user = new User();

    private async Task CreateUser()
    {
        await _client.PostAsJsonAsync(Endpoints.UsersEndpoint, user);
        _navManager.NavigateTo("/users/");
    } }